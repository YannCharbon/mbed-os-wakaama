{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "‚û°Ô∏è Deploy/Update environment and libraries (Windows)",
            "command": "vscode_deploy_windows.bat",
            "args": [
                "EFR32_CUSTOM",
                "${workspaceFolderBasename}"
            ]
        },
        {
            "label": "‚û°Ô∏èüêß Deploy/Update environment and libraries (Linux)",
            "command": "./vscode_deploy_linux.sh",
            "args": [
                "EFR32_CUSTOM",
                "${workspaceFolderBasename}"
            ]
        },
        {
            "label": "===== BUILD EFR32 =====",
            "command": ""
        },
        {
            "label": "üî® Build program (GCC)",
            "command": "mbed",
            "args": [
                "compile",
                "-m",
                "EFR32_CUSTOM",
                "-t",
                "GCC_ARM"
            ]
        },
        {
            "label": "üî®üêû Build program (GCC debug)",
            "command": "mbed",
            "args": [
                "compile",
                "--profile=debug",
                "-m",
                "EFR32_CUSTOM",
                "-t",
                "GCC_ARM"
            ]
        },
        {
            "label": "===== BUILD NUCLEO L486 =====",
            "command": ""
        },
        {
            "label": "üî®üêû Build program (GCC debug)",
            "command": "mbed",
            "args": [
                "compile",
                "--profile=debug",
                "-m",
                "NUCLEO_L486RG",
                "-t",
                "GCC_ARM"
            ]
        },
        {
            "label": "===== BUILD DISCO F769 =====",
            "command": ""
        },
        {
            "label": "üî® Build program (GCC release)",
            "command": "mbed",
            "args": [
                "compile",
                "--profile=release",
                "-m",
                "DISCO_F769NI",
                "-t",
                "GCC_ARM"
            ]
        },
        {
            "label": "üî®üêû Build program (GCC debug)",
            "command": "mbed",
            "args": [
                "compile",
                "--profile=debug",
                "-m",
                "DISCO_F769NI",
                "-t",
                "GCC_ARM"
            ]
        },
        {
            "label": "===== EFR32 Flash (Windows) =====",
            "command": ""
        },
        {
            "label": "üöÄ JLINK Flash board (GCC)",
            "command": "jlink",
            "args": [
                "-device",
                "efr32mg12p433f1024gm68",
                "-autoconnect",
                "1",
                "-NoGui",
                "0",
                "-if",
                "SWD",
                "-Speed",
                "4000",
                "-CommandFile",
                "flashefr32custom.jlink"
            ]
        },
        {
            "label": "üöÄüêû JLINK Flash board (GCC debug)",
            "command": "jlink",
            "args": [
                "-device",
                "efr32mg12p433f1024gm68",
                "-autoconnect",
                "1",
                "-NoGui",
                "0",
                "-if",
                "SWD",
                "-Speed",
                "4000",
                "-CommandFile",
                "flashefr32custom_debug.jlink"
            ]
        },
        {
            "label": "===== EFR32 Flash (Linux) =====",
            "command": ""
        },
        {
            "label": "üêßüöÄ JLINK Flash board (GCC)",
            "command": "JLinkExe",
            "args": [
                "-device",
                "efr32mg12p433f1024gm68",
                "-autoconnect",
                "1",
                "-NoGui",
                "0",
                "-if",
                "SWD",
                "-Speed",
                "4000",
                "-CommandFile",
                "flashefr32custom.jlink"
            ]
        },
        {
            "label": "üêßüöÄüêû JLINK Flash board (GCC debug)",
            "command": "JLinkExe",
            "args": [
                "-device",
                "efr32mg12p433f1024gm68",
                "-autoconnect",
                "1",
                "-NoGui",
                "0",
                "-if",
                "SWD",
                "-Speed",
                "4000",
                "-CommandFile",
                "flashefr32custom_debug.jlink"
            ]
        },
        {
            "label": "===== NUCLEO L486 Flash (Linux) =====",
            "command": ""
        },
        {
            "label": "üöÄüêû Openocd flash (GCC debug) L486",
            "command": "./flash_stm32l486disco.sh",
            "args": [
                "${workspaceFolderBasename}"
            ]
        },
        {
            "label": "===== DISCO L769 Flash (Linux) =====",
            "command": ""
        },
        {
            "label": "üöÄ Openocd flash (GCC release) F769",
            "command": "./flash_stm32f769disco_release.sh",
            "args": [
                "${workspaceFolderBasename}"
            ]
        },
        {
            "label": "üöÄüêû Openocd flash (GCC debug) F769",
            "command": "./flash_stm32f769disco.sh",
            "args": [
                "${workspaceFolderBasename}"
            ]
        },
        {
            "label": "===== Configs =====",
            "command": ""
        },
        {
            "label": "‚öôÔ∏è Show config EFR32",
            "command": "mbed",
            "args": [
                "compile",
                "-m",
                "EFR32_CUSTOM",
                "-t",
                "GCC_ARM",
                "--config"
            ]
        },
        {
            "label": "‚öôÔ∏è Show config L486",
            "command": "mbed",
            "args": [
                "compile",
                "-m",
                "NUCLEO_L486RG",
                "-t",
                "GCC_ARM",
                "--config"
            ]
        },
        {
            "label": "‚öôÔ∏è Show config l769",
            "command": "mbed",
            "args": [
                "compile",
                "-m",
                "DISCO_F769NI",
                "-t",
                "GCC_ARM",
                "--config"
            ]
        },
        {
            "type": "cppbuild",
            "label": "C/C++: arm-none-eabi-g++ build active file",
            "command": "/gcc-arm-none-eabi-9-2020-q2-update/bin/arm-none-eabi-g++",
            "args": [
                "-fdiagnostics-color=always",
                "-g",
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
            "detail": "Task generated by Debugger."
        }
    ]
}